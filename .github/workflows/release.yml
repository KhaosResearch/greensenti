name: release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Get full Python version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Build project for distribution
      shell: bash
      run: |
        python -m pip install -q build
        python -m build
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/
        retention-days: 2
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: steps.check-version.outputs.prerelease == 'true'
  deploy:
    runs-on: ubuntu-latest
    needs: release
    env:
      PROD: workstation-6
      PROD_USER: ubuntu
    steps:
    - name: Setup Tailscale
      uses: tailscale/github-action@main
      with:
        authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
    - name: Configure SSH
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        printf '%s' "$SSH_KEY" >~/.ssh/github-actions
        chmod 0600 ~/.ssh/github-actions
        PROD_IP="$(tailscale ip -6 $PROD)"
        printf 'Host %s\n\tStrictHostKeyChecking=accept-new\n\tUser %s\n\tIdentityFile ~/.ssh/github-actions\n' "$PROD_IP" "$PROD_USER" >~/.ssh/config
    - name: Download artifact from release
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/
    - name: Ship it to pypi repository
      run: |
        PROD_IP="$(tailscale ip -6 $PROD)"
        echo dist/ "$PROD_USER@[$PROD_IP]:/tmp/"
        scp -r dist/ "$PROD_USER@[$PROD_IP]:/tmp/"
        ssh $PROD_IP 'python -m twine upload -r khaos /tmp/dist/* && rm /tmp/dist/*'
